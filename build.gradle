buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'

version = "1.0.2"
group= "net.tclproject.tclgraphics" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "Animatrix-1.7.10"

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "eclipse"
}

configurations {
    includeInJar
}

dependencies {
    //includeInJar group: 'junit', name: 'junit', version: '4.11'
    //compile configurations.includeInJar
    //includeInJar group: 'org.mockito', name: 'mockito-core', version: '1.+'
    //compile configurations.includeInJar
    //includeInJar group: 'org.powermock', name: 'powermock-module-junit4', version: '1.6.5'
    //compile configurations.includeInJar
   // includeInJar group: 'org.powermock', name: 'powermock-api-mockito', version: '1.6.5'
   // compile configurations.includeInJar
   // includeInJar group: 'org.powermock', name: 'powermock-module-junit4-rule-agent', version: '1.6.5'
  //  compile configurations.includeInJar
  //  includeInJar group: 'org.assertj', name: 'assertj-core', version: '3.9.0'
  //  compile configurations.includeInJar
  //  includeInJar group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
  //  compile configurations.includeInJar
    
    // you may put jars on which you depend on in ./libs
    // or you may define them like so..
    //compile "some.group:artifact:version:classifier"
    //compile "some.group:artifact:version"
      
    // real examples
    //compile 'com.mod-buildcraft:buildcraft:6.0.8:dev'  // adds buildcraft to the dev env
    //compile 'com.googlecode.efficient-java-matrix-library:ejml:0.24' // adds ejml to the dev env

    // for more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html

}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
  manifest {
      attributes 'FMLCorePlugin': 'net.tclproject.mysteriumlib.asm.fixes.MysteriumPatchesFixLoaderGraphics'
      attributes 'FMLCorePluginContainsFMLMod': 'true'
      attributes 'FMLAT': 'tclgraphics_at.cfg'
  }
  from {
      configurations.includeInJar.collect { it.isDirectory() ? it : zipTree(it) }
  }
}

apply plugin: 'java'
sourceCompatibility = 1.8
targetCompatibility = 1.8
